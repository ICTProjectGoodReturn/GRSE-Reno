/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.goodreturn.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.goodreturn.model.Lender;
import org.goodreturn.model.LenderModel;
import org.goodreturn.model.LenderSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Lender service. Represents a row in the &quot;GoodReturn_Lender&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.goodreturn.model.LenderModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link LenderImpl}.
 * </p>
 *
 * @author gilaa004
 * @see LenderImpl
 * @see org.goodreturn.model.Lender
 * @see org.goodreturn.model.LenderModel
 * @generated
 */
@JSON(strict = true)
public class LenderModelImpl extends BaseModelImpl<Lender>
	implements LenderModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a lender model instance should use the {@link org.goodreturn.model.Lender} interface instead.
	 */
	public static final String TABLE_NAME = "GoodReturn_Lender";
	public static final Object[][] TABLE_COLUMNS = {
			{ "lender_Id", Types.BIGINT },
			{ "abacus_Person_Id", Types.BIGINT },
			{ "certificate_Id", Types.BIGINT },
			{ "employer_Name", Types.VARCHAR },
			{ "comment_", Types.VARCHAR },
			{ "heard_Of_Us", Types.VARCHAR },
			{ "display_Name", Types.VARCHAR },
			{ "date_Of_Birth", Types.TIMESTAMP },
			{ "reason_For_Lending", Types.VARCHAR },
			{ "about_Themselves", Types.VARCHAR },
			{ "personal_Link", Types.VARCHAR },
			{ "is_Public_Profile", Types.BOOLEAN },
			{ "recieve_Emails", Types.BOOLEAN },
			{ "recieve_GoodReturn_Info", Types.BOOLEAN },
			{ "is_Anonymous", Types.BOOLEAN },
			{ "is_Validated", Types.BOOLEAN },
			{ "password_", Types.VARCHAR },
			{ "last_Login_Date", Types.TIMESTAMP },
			{ "featured_Lender", Types.VARCHAR },
			{ "is_Loan_Donation", Types.BOOLEAN },
			{ "changed_By", Types.VARCHAR },
			{ "changed_Time", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table GoodReturn_Lender (lender_Id LONG not null primary key,abacus_Person_Id LONG,certificate_Id LONG,employer_Name VARCHAR(75) null,comment_ VARCHAR(75) null,heard_Of_Us VARCHAR(75) null,display_Name VARCHAR(75) null,date_Of_Birth DATE null,reason_For_Lending VARCHAR(75) null,about_Themselves VARCHAR(75) null,personal_Link VARCHAR(75) null,is_Public_Profile BOOLEAN,recieve_Emails BOOLEAN,recieve_GoodReturn_Info BOOLEAN,is_Anonymous BOOLEAN,is_Validated BOOLEAN,password_ VARCHAR(75) null,last_Login_Date DATE null,featured_Lender VARCHAR(75) null,is_Loan_Donation BOOLEAN,changed_By VARCHAR(75) null,changed_Time LONG)";
	public static final String TABLE_SQL_DROP = "drop table GoodReturn_Lender";
	public static final String ORDER_BY_JPQL = " ORDER BY lender.lender_Id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY GoodReturn_Lender.lender_Id ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.goodreturn.model.Lender"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.goodreturn.model.Lender"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Lender toModel(LenderSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Lender model = new LenderImpl();

		model.setLender_Id(soapModel.getLender_Id());
		model.setAbacus_Person_Id(soapModel.getAbacus_Person_Id());
		model.setCertificate_Id(soapModel.getCertificate_Id());
		model.setEmployer_Name(soapModel.getEmployer_Name());
		model.setComment(soapModel.getComment());
		model.setHeard_Of_Us(soapModel.getHeard_Of_Us());
		model.setDisplay_Name(soapModel.getDisplay_Name());
		model.setDate_Of_Birth(soapModel.getDate_Of_Birth());
		model.setReason_For_Lending(soapModel.getReason_For_Lending());
		model.setAbout_Themselves(soapModel.getAbout_Themselves());
		model.setPersonal_Link(soapModel.getPersonal_Link());
		model.setIs_Public_Profile(soapModel.getIs_Public_Profile());
		model.setRecieve_Emails(soapModel.getRecieve_Emails());
		model.setRecieve_GoodReturn_Info(soapModel.getRecieve_GoodReturn_Info());
		model.setIs_Anonymous(soapModel.getIs_Anonymous());
		model.setIs_Validated(soapModel.getIs_Validated());
		model.setPassword(soapModel.getPassword());
		model.setLast_Login_Date(soapModel.getLast_Login_Date());
		model.setFeatured_Lender(soapModel.getFeatured_Lender());
		model.setIs_Loan_Donation(soapModel.getIs_Loan_Donation());
		model.setChanged_By(soapModel.getChanged_By());
		model.setChanged_Time(soapModel.getChanged_Time());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Lender> toModels(LenderSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Lender> models = new ArrayList<Lender>(soapModels.length);

		for (LenderSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.goodreturn.model.Lender"));

	public LenderModelImpl() {
	}

	public long getPrimaryKey() {
		return _lender_Id;
	}

	public void setPrimaryKey(long primaryKey) {
		setLender_Id(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_lender_Id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return Lender.class;
	}

	public String getModelClassName() {
		return Lender.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("lender_Id", getLender_Id());
		attributes.put("abacus_Person_Id", getAbacus_Person_Id());
		attributes.put("certificate_Id", getCertificate_Id());
		attributes.put("employer_Name", getEmployer_Name());
		attributes.put("comment", getComment());
		attributes.put("heard_Of_Us", getHeard_Of_Us());
		attributes.put("display_Name", getDisplay_Name());
		attributes.put("date_Of_Birth", getDate_Of_Birth());
		attributes.put("reason_For_Lending", getReason_For_Lending());
		attributes.put("about_Themselves", getAbout_Themselves());
		attributes.put("personal_Link", getPersonal_Link());
		attributes.put("is_Public_Profile", getIs_Public_Profile());
		attributes.put("recieve_Emails", getRecieve_Emails());
		attributes.put("recieve_GoodReturn_Info", getRecieve_GoodReturn_Info());
		attributes.put("is_Anonymous", getIs_Anonymous());
		attributes.put("is_Validated", getIs_Validated());
		attributes.put("password", getPassword());
		attributes.put("last_Login_Date", getLast_Login_Date());
		attributes.put("featured_Lender", getFeatured_Lender());
		attributes.put("is_Loan_Donation", getIs_Loan_Donation());
		attributes.put("changed_By", getChanged_By());
		attributes.put("changed_Time", getChanged_Time());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long lender_Id = (Long)attributes.get("lender_Id");

		if (lender_Id != null) {
			setLender_Id(lender_Id);
		}

		Long abacus_Person_Id = (Long)attributes.get("abacus_Person_Id");

		if (abacus_Person_Id != null) {
			setAbacus_Person_Id(abacus_Person_Id);
		}

		Long certificate_Id = (Long)attributes.get("certificate_Id");

		if (certificate_Id != null) {
			setCertificate_Id(certificate_Id);
		}

		String employer_Name = (String)attributes.get("employer_Name");

		if (employer_Name != null) {
			setEmployer_Name(employer_Name);
		}

		String comment = (String)attributes.get("comment");

		if (comment != null) {
			setComment(comment);
		}

		String heard_Of_Us = (String)attributes.get("heard_Of_Us");

		if (heard_Of_Us != null) {
			setHeard_Of_Us(heard_Of_Us);
		}

		String display_Name = (String)attributes.get("display_Name");

		if (display_Name != null) {
			setDisplay_Name(display_Name);
		}

		Date date_Of_Birth = (Date)attributes.get("date_Of_Birth");

		if (date_Of_Birth != null) {
			setDate_Of_Birth(date_Of_Birth);
		}

		String reason_For_Lending = (String)attributes.get("reason_For_Lending");

		if (reason_For_Lending != null) {
			setReason_For_Lending(reason_For_Lending);
		}

		String about_Themselves = (String)attributes.get("about_Themselves");

		if (about_Themselves != null) {
			setAbout_Themselves(about_Themselves);
		}

		String personal_Link = (String)attributes.get("personal_Link");

		if (personal_Link != null) {
			setPersonal_Link(personal_Link);
		}

		Boolean is_Public_Profile = (Boolean)attributes.get("is_Public_Profile");

		if (is_Public_Profile != null) {
			setIs_Public_Profile(is_Public_Profile);
		}

		Boolean recieve_Emails = (Boolean)attributes.get("recieve_Emails");

		if (recieve_Emails != null) {
			setRecieve_Emails(recieve_Emails);
		}

		Boolean recieve_GoodReturn_Info = (Boolean)attributes.get(
				"recieve_GoodReturn_Info");

		if (recieve_GoodReturn_Info != null) {
			setRecieve_GoodReturn_Info(recieve_GoodReturn_Info);
		}

		Boolean is_Anonymous = (Boolean)attributes.get("is_Anonymous");

		if (is_Anonymous != null) {
			setIs_Anonymous(is_Anonymous);
		}

		Boolean is_Validated = (Boolean)attributes.get("is_Validated");

		if (is_Validated != null) {
			setIs_Validated(is_Validated);
		}

		String password = (String)attributes.get("password");

		if (password != null) {
			setPassword(password);
		}

		Date last_Login_Date = (Date)attributes.get("last_Login_Date");

		if (last_Login_Date != null) {
			setLast_Login_Date(last_Login_Date);
		}

		String featured_Lender = (String)attributes.get("featured_Lender");

		if (featured_Lender != null) {
			setFeatured_Lender(featured_Lender);
		}

		Boolean is_Loan_Donation = (Boolean)attributes.get("is_Loan_Donation");

		if (is_Loan_Donation != null) {
			setIs_Loan_Donation(is_Loan_Donation);
		}

		String changed_By = (String)attributes.get("changed_By");

		if (changed_By != null) {
			setChanged_By(changed_By);
		}

		Long changed_Time = (Long)attributes.get("changed_Time");

		if (changed_Time != null) {
			setChanged_Time(changed_Time);
		}
	}

	@JSON
	public long getLender_Id() {
		return _lender_Id;
	}

	public void setLender_Id(long lender_Id) {
		_lender_Id = lender_Id;
	}

	@JSON
	public long getAbacus_Person_Id() {
		return _abacus_Person_Id;
	}

	public void setAbacus_Person_Id(long abacus_Person_Id) {
		_abacus_Person_Id = abacus_Person_Id;
	}

	@JSON
	public long getCertificate_Id() {
		return _certificate_Id;
	}

	public void setCertificate_Id(long certificate_Id) {
		_certificate_Id = certificate_Id;
	}

	@JSON
	public String getEmployer_Name() {
		if (_employer_Name == null) {
			return StringPool.BLANK;
		}
		else {
			return _employer_Name;
		}
	}

	public void setEmployer_Name(String employer_Name) {
		_employer_Name = employer_Name;
	}

	@JSON
	public String getComment() {
		if (_comment == null) {
			return StringPool.BLANK;
		}
		else {
			return _comment;
		}
	}

	public void setComment(String comment) {
		_comment = comment;
	}

	@JSON
	public String getHeard_Of_Us() {
		if (_heard_Of_Us == null) {
			return StringPool.BLANK;
		}
		else {
			return _heard_Of_Us;
		}
	}

	public void setHeard_Of_Us(String heard_Of_Us) {
		_heard_Of_Us = heard_Of_Us;
	}

	@JSON
	public String getDisplay_Name() {
		if (_display_Name == null) {
			return StringPool.BLANK;
		}
		else {
			return _display_Name;
		}
	}

	public void setDisplay_Name(String display_Name) {
		_display_Name = display_Name;
	}

	@JSON
	public Date getDate_Of_Birth() {
		return _date_Of_Birth;
	}

	public void setDate_Of_Birth(Date date_Of_Birth) {
		_date_Of_Birth = date_Of_Birth;
	}

	@JSON
	public String getReason_For_Lending() {
		if (_reason_For_Lending == null) {
			return StringPool.BLANK;
		}
		else {
			return _reason_For_Lending;
		}
	}

	public void setReason_For_Lending(String reason_For_Lending) {
		_reason_For_Lending = reason_For_Lending;
	}

	@JSON
	public String getAbout_Themselves() {
		if (_about_Themselves == null) {
			return StringPool.BLANK;
		}
		else {
			return _about_Themselves;
		}
	}

	public void setAbout_Themselves(String about_Themselves) {
		_about_Themselves = about_Themselves;
	}

	@JSON
	public String getPersonal_Link() {
		if (_personal_Link == null) {
			return StringPool.BLANK;
		}
		else {
			return _personal_Link;
		}
	}

	public void setPersonal_Link(String personal_Link) {
		_personal_Link = personal_Link;
	}

	@JSON
	public boolean getIs_Public_Profile() {
		return _is_Public_Profile;
	}

	public boolean isIs_Public_Profile() {
		return _is_Public_Profile;
	}

	public void setIs_Public_Profile(boolean is_Public_Profile) {
		_is_Public_Profile = is_Public_Profile;
	}

	@JSON
	public boolean getRecieve_Emails() {
		return _recieve_Emails;
	}

	public boolean isRecieve_Emails() {
		return _recieve_Emails;
	}

	public void setRecieve_Emails(boolean recieve_Emails) {
		_recieve_Emails = recieve_Emails;
	}

	@JSON
	public boolean getRecieve_GoodReturn_Info() {
		return _recieve_GoodReturn_Info;
	}

	public boolean isRecieve_GoodReturn_Info() {
		return _recieve_GoodReturn_Info;
	}

	public void setRecieve_GoodReturn_Info(boolean recieve_GoodReturn_Info) {
		_recieve_GoodReturn_Info = recieve_GoodReturn_Info;
	}

	@JSON
	public boolean getIs_Anonymous() {
		return _is_Anonymous;
	}

	public boolean isIs_Anonymous() {
		return _is_Anonymous;
	}

	public void setIs_Anonymous(boolean is_Anonymous) {
		_is_Anonymous = is_Anonymous;
	}

	@JSON
	public boolean getIs_Validated() {
		return _is_Validated;
	}

	public boolean isIs_Validated() {
		return _is_Validated;
	}

	public void setIs_Validated(boolean is_Validated) {
		_is_Validated = is_Validated;
	}

	@JSON
	public String getPassword() {
		if (_password == null) {
			return StringPool.BLANK;
		}
		else {
			return _password;
		}
	}

	public void setPassword(String password) {
		_password = password;
	}

	@JSON
	public Date getLast_Login_Date() {
		return _last_Login_Date;
	}

	public void setLast_Login_Date(Date last_Login_Date) {
		_last_Login_Date = last_Login_Date;
	}

	@JSON
	public String getFeatured_Lender() {
		if (_featured_Lender == null) {
			return StringPool.BLANK;
		}
		else {
			return _featured_Lender;
		}
	}

	public void setFeatured_Lender(String featured_Lender) {
		_featured_Lender = featured_Lender;
	}

	@JSON
	public boolean getIs_Loan_Donation() {
		return _is_Loan_Donation;
	}

	public boolean isIs_Loan_Donation() {
		return _is_Loan_Donation;
	}

	public void setIs_Loan_Donation(boolean is_Loan_Donation) {
		_is_Loan_Donation = is_Loan_Donation;
	}

	@JSON
	public String getChanged_By() {
		if (_changed_By == null) {
			return StringPool.BLANK;
		}
		else {
			return _changed_By;
		}
	}

	public void setChanged_By(String changed_By) {
		_changed_By = changed_By;
	}

	@JSON
	public long getChanged_Time() {
		return _changed_Time;
	}

	public void setChanged_Time(long changed_Time) {
		_changed_Time = changed_Time;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			Lender.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Lender toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (Lender)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		LenderImpl lenderImpl = new LenderImpl();

		lenderImpl.setLender_Id(getLender_Id());
		lenderImpl.setAbacus_Person_Id(getAbacus_Person_Id());
		lenderImpl.setCertificate_Id(getCertificate_Id());
		lenderImpl.setEmployer_Name(getEmployer_Name());
		lenderImpl.setComment(getComment());
		lenderImpl.setHeard_Of_Us(getHeard_Of_Us());
		lenderImpl.setDisplay_Name(getDisplay_Name());
		lenderImpl.setDate_Of_Birth(getDate_Of_Birth());
		lenderImpl.setReason_For_Lending(getReason_For_Lending());
		lenderImpl.setAbout_Themselves(getAbout_Themselves());
		lenderImpl.setPersonal_Link(getPersonal_Link());
		lenderImpl.setIs_Public_Profile(getIs_Public_Profile());
		lenderImpl.setRecieve_Emails(getRecieve_Emails());
		lenderImpl.setRecieve_GoodReturn_Info(getRecieve_GoodReturn_Info());
		lenderImpl.setIs_Anonymous(getIs_Anonymous());
		lenderImpl.setIs_Validated(getIs_Validated());
		lenderImpl.setPassword(getPassword());
		lenderImpl.setLast_Login_Date(getLast_Login_Date());
		lenderImpl.setFeatured_Lender(getFeatured_Lender());
		lenderImpl.setIs_Loan_Donation(getIs_Loan_Donation());
		lenderImpl.setChanged_By(getChanged_By());
		lenderImpl.setChanged_Time(getChanged_Time());

		lenderImpl.resetOriginalValues();

		return lenderImpl;
	}

	public int compareTo(Lender lender) {
		int value = 0;

		if (getLender_Id() < lender.getLender_Id()) {
			value = -1;
		}
		else if (getLender_Id() > lender.getLender_Id()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		Lender lender = null;

		try {
			lender = (Lender)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = lender.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<Lender> toCacheModel() {
		LenderCacheModel lenderCacheModel = new LenderCacheModel();

		lenderCacheModel.lender_Id = getLender_Id();

		lenderCacheModel.abacus_Person_Id = getAbacus_Person_Id();

		lenderCacheModel.certificate_Id = getCertificate_Id();

		lenderCacheModel.employer_Name = getEmployer_Name();

		String employer_Name = lenderCacheModel.employer_Name;

		if ((employer_Name != null) && (employer_Name.length() == 0)) {
			lenderCacheModel.employer_Name = null;
		}

		lenderCacheModel.comment = getComment();

		String comment = lenderCacheModel.comment;

		if ((comment != null) && (comment.length() == 0)) {
			lenderCacheModel.comment = null;
		}

		lenderCacheModel.heard_Of_Us = getHeard_Of_Us();

		String heard_Of_Us = lenderCacheModel.heard_Of_Us;

		if ((heard_Of_Us != null) && (heard_Of_Us.length() == 0)) {
			lenderCacheModel.heard_Of_Us = null;
		}

		lenderCacheModel.display_Name = getDisplay_Name();

		String display_Name = lenderCacheModel.display_Name;

		if ((display_Name != null) && (display_Name.length() == 0)) {
			lenderCacheModel.display_Name = null;
		}

		Date date_Of_Birth = getDate_Of_Birth();

		if (date_Of_Birth != null) {
			lenderCacheModel.date_Of_Birth = date_Of_Birth.getTime();
		}
		else {
			lenderCacheModel.date_Of_Birth = Long.MIN_VALUE;
		}

		lenderCacheModel.reason_For_Lending = getReason_For_Lending();

		String reason_For_Lending = lenderCacheModel.reason_For_Lending;

		if ((reason_For_Lending != null) && (reason_For_Lending.length() == 0)) {
			lenderCacheModel.reason_For_Lending = null;
		}

		lenderCacheModel.about_Themselves = getAbout_Themselves();

		String about_Themselves = lenderCacheModel.about_Themselves;

		if ((about_Themselves != null) && (about_Themselves.length() == 0)) {
			lenderCacheModel.about_Themselves = null;
		}

		lenderCacheModel.personal_Link = getPersonal_Link();

		String personal_Link = lenderCacheModel.personal_Link;

		if ((personal_Link != null) && (personal_Link.length() == 0)) {
			lenderCacheModel.personal_Link = null;
		}

		lenderCacheModel.is_Public_Profile = getIs_Public_Profile();

		lenderCacheModel.recieve_Emails = getRecieve_Emails();

		lenderCacheModel.recieve_GoodReturn_Info = getRecieve_GoodReturn_Info();

		lenderCacheModel.is_Anonymous = getIs_Anonymous();

		lenderCacheModel.is_Validated = getIs_Validated();

		lenderCacheModel.password = getPassword();

		String password = lenderCacheModel.password;

		if ((password != null) && (password.length() == 0)) {
			lenderCacheModel.password = null;
		}

		Date last_Login_Date = getLast_Login_Date();

		if (last_Login_Date != null) {
			lenderCacheModel.last_Login_Date = last_Login_Date.getTime();
		}
		else {
			lenderCacheModel.last_Login_Date = Long.MIN_VALUE;
		}

		lenderCacheModel.featured_Lender = getFeatured_Lender();

		String featured_Lender = lenderCacheModel.featured_Lender;

		if ((featured_Lender != null) && (featured_Lender.length() == 0)) {
			lenderCacheModel.featured_Lender = null;
		}

		lenderCacheModel.is_Loan_Donation = getIs_Loan_Donation();

		lenderCacheModel.changed_By = getChanged_By();

		String changed_By = lenderCacheModel.changed_By;

		if ((changed_By != null) && (changed_By.length() == 0)) {
			lenderCacheModel.changed_By = null;
		}

		lenderCacheModel.changed_Time = getChanged_Time();

		return lenderCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(45);

		sb.append("{lender_Id=");
		sb.append(getLender_Id());
		sb.append(", abacus_Person_Id=");
		sb.append(getAbacus_Person_Id());
		sb.append(", certificate_Id=");
		sb.append(getCertificate_Id());
		sb.append(", employer_Name=");
		sb.append(getEmployer_Name());
		sb.append(", comment=");
		sb.append(getComment());
		sb.append(", heard_Of_Us=");
		sb.append(getHeard_Of_Us());
		sb.append(", display_Name=");
		sb.append(getDisplay_Name());
		sb.append(", date_Of_Birth=");
		sb.append(getDate_Of_Birth());
		sb.append(", reason_For_Lending=");
		sb.append(getReason_For_Lending());
		sb.append(", about_Themselves=");
		sb.append(getAbout_Themselves());
		sb.append(", personal_Link=");
		sb.append(getPersonal_Link());
		sb.append(", is_Public_Profile=");
		sb.append(getIs_Public_Profile());
		sb.append(", recieve_Emails=");
		sb.append(getRecieve_Emails());
		sb.append(", recieve_GoodReturn_Info=");
		sb.append(getRecieve_GoodReturn_Info());
		sb.append(", is_Anonymous=");
		sb.append(getIs_Anonymous());
		sb.append(", is_Validated=");
		sb.append(getIs_Validated());
		sb.append(", password=");
		sb.append(getPassword());
		sb.append(", last_Login_Date=");
		sb.append(getLast_Login_Date());
		sb.append(", featured_Lender=");
		sb.append(getFeatured_Lender());
		sb.append(", is_Loan_Donation=");
		sb.append(getIs_Loan_Donation());
		sb.append(", changed_By=");
		sb.append(getChanged_By());
		sb.append(", changed_Time=");
		sb.append(getChanged_Time());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(70);

		sb.append("<model><model-name>");
		sb.append("org.goodreturn.model.Lender");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>lender_Id</column-name><column-value><![CDATA[");
		sb.append(getLender_Id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>abacus_Person_Id</column-name><column-value><![CDATA[");
		sb.append(getAbacus_Person_Id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>certificate_Id</column-name><column-value><![CDATA[");
		sb.append(getCertificate_Id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employer_Name</column-name><column-value><![CDATA[");
		sb.append(getEmployer_Name());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>comment</column-name><column-value><![CDATA[");
		sb.append(getComment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>heard_Of_Us</column-name><column-value><![CDATA[");
		sb.append(getHeard_Of_Us());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>display_Name</column-name><column-value><![CDATA[");
		sb.append(getDisplay_Name());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>date_Of_Birth</column-name><column-value><![CDATA[");
		sb.append(getDate_Of_Birth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reason_For_Lending</column-name><column-value><![CDATA[");
		sb.append(getReason_For_Lending());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>about_Themselves</column-name><column-value><![CDATA[");
		sb.append(getAbout_Themselves());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>personal_Link</column-name><column-value><![CDATA[");
		sb.append(getPersonal_Link());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>is_Public_Profile</column-name><column-value><![CDATA[");
		sb.append(getIs_Public_Profile());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>recieve_Emails</column-name><column-value><![CDATA[");
		sb.append(getRecieve_Emails());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>recieve_GoodReturn_Info</column-name><column-value><![CDATA[");
		sb.append(getRecieve_GoodReturn_Info());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>is_Anonymous</column-name><column-value><![CDATA[");
		sb.append(getIs_Anonymous());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>is_Validated</column-name><column-value><![CDATA[");
		sb.append(getIs_Validated());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>password</column-name><column-value><![CDATA[");
		sb.append(getPassword());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>last_Login_Date</column-name><column-value><![CDATA[");
		sb.append(getLast_Login_Date());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>featured_Lender</column-name><column-value><![CDATA[");
		sb.append(getFeatured_Lender());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>is_Loan_Donation</column-name><column-value><![CDATA[");
		sb.append(getIs_Loan_Donation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>changed_By</column-name><column-value><![CDATA[");
		sb.append(getChanged_By());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>changed_Time</column-name><column-value><![CDATA[");
		sb.append(getChanged_Time());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Lender.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			Lender.class
		};
	private long _lender_Id;
	private long _abacus_Person_Id;
	private long _certificate_Id;
	private String _employer_Name;
	private String _comment;
	private String _heard_Of_Us;
	private String _display_Name;
	private Date _date_Of_Birth;
	private String _reason_For_Lending;
	private String _about_Themselves;
	private String _personal_Link;
	private boolean _is_Public_Profile;
	private boolean _recieve_Emails;
	private boolean _recieve_GoodReturn_Info;
	private boolean _is_Anonymous;
	private boolean _is_Validated;
	private String _password;
	private Date _last_Login_Date;
	private String _featured_Lender;
	private boolean _is_Loan_Donation;
	private String _changed_By;
	private long _changed_Time;
	private Lender _escapedModelProxy;
}