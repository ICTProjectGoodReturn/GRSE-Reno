/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.goodreturn.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.goodreturn.model.TeamLender;
import org.goodreturn.model.TeamLenderModel;
import org.goodreturn.model.TeamLenderSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the TeamLender service. Represents a row in the &quot;GoodReturn_TeamLender&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.goodreturn.model.TeamLenderModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TeamLenderImpl}.
 * </p>
 *
 * @author gilaa004
 * @see TeamLenderImpl
 * @see org.goodreturn.model.TeamLender
 * @see org.goodreturn.model.TeamLenderModel
 * @generated
 */
@JSON(strict = true)
public class TeamLenderModelImpl extends BaseModelImpl<TeamLender>
	implements TeamLenderModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a team lender model instance should use the {@link org.goodreturn.model.TeamLender} interface instead.
	 */
	public static final String TABLE_NAME = "GoodReturn_TeamLender";
	public static final Object[][] TABLE_COLUMNS = {
			{ "team_lender_Id", Types.BIGINT },
			{ "lender_Id", Types.BIGINT },
			{ "team_Id", Types.BIGINT },
			{ "changed_By", Types.VARCHAR },
			{ "changed_Time", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table GoodReturn_TeamLender (team_lender_Id LONG not null primary key,lender_Id LONG,team_Id LONG,changed_By VARCHAR(75) null,changed_Time LONG,groupId LONG,companyId LONG)";
	public static final String TABLE_SQL_DROP = "drop table GoodReturn_TeamLender";
	public static final String ORDER_BY_JPQL = " ORDER BY teamLender.team_lender_Id ASC";
	public static final String ORDER_BY_SQL = " ORDER BY GoodReturn_TeamLender.team_lender_Id ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.goodreturn.model.TeamLender"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.goodreturn.model.TeamLender"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static TeamLender toModel(TeamLenderSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		TeamLender model = new TeamLenderImpl();

		model.setTeam_lender_Id(soapModel.getTeam_lender_Id());
		model.setLender_Id(soapModel.getLender_Id());
		model.setTeam_Id(soapModel.getTeam_Id());
		model.setChanged_By(soapModel.getChanged_By());
		model.setChanged_Time(soapModel.getChanged_Time());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<TeamLender> toModels(TeamLenderSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<TeamLender> models = new ArrayList<TeamLender>(soapModels.length);

		for (TeamLenderSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.goodreturn.model.TeamLender"));

	public TeamLenderModelImpl() {
	}

	public long getPrimaryKey() {
		return _team_lender_Id;
	}

	public void setPrimaryKey(long primaryKey) {
		setTeam_lender_Id(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_team_lender_Id);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return TeamLender.class;
	}

	public String getModelClassName() {
		return TeamLender.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("team_lender_Id", getTeam_lender_Id());
		attributes.put("lender_Id", getLender_Id());
		attributes.put("team_Id", getTeam_Id());
		attributes.put("changed_By", getChanged_By());
		attributes.put("changed_Time", getChanged_Time());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long team_lender_Id = (Long)attributes.get("team_lender_Id");

		if (team_lender_Id != null) {
			setTeam_lender_Id(team_lender_Id);
		}

		Long lender_Id = (Long)attributes.get("lender_Id");

		if (lender_Id != null) {
			setLender_Id(lender_Id);
		}

		Long team_Id = (Long)attributes.get("team_Id");

		if (team_Id != null) {
			setTeam_Id(team_Id);
		}

		String changed_By = (String)attributes.get("changed_By");

		if (changed_By != null) {
			setChanged_By(changed_By);
		}

		Long changed_Time = (Long)attributes.get("changed_Time");

		if (changed_Time != null) {
			setChanged_Time(changed_Time);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}
	}

	@JSON
	public long getTeam_lender_Id() {
		return _team_lender_Id;
	}

	public void setTeam_lender_Id(long team_lender_Id) {
		_team_lender_Id = team_lender_Id;
	}

	@JSON
	public long getLender_Id() {
		return _lender_Id;
	}

	public void setLender_Id(long lender_Id) {
		_lender_Id = lender_Id;
	}

	@JSON
	public long getTeam_Id() {
		return _team_Id;
	}

	public void setTeam_Id(long team_Id) {
		_team_Id = team_Id;
	}

	@JSON
	public String getChanged_By() {
		if (_changed_By == null) {
			return StringPool.BLANK;
		}
		else {
			return _changed_By;
		}
	}

	public void setChanged_By(String changed_By) {
		_changed_By = changed_By;
	}

	@JSON
	public long getChanged_Time() {
		return _changed_Time;
	}

	public void setChanged_Time(long changed_Time) {
		_changed_Time = changed_Time;
	}

	@JSON
	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			TeamLender.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TeamLender toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (TeamLender)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		TeamLenderImpl teamLenderImpl = new TeamLenderImpl();

		teamLenderImpl.setTeam_lender_Id(getTeam_lender_Id());
		teamLenderImpl.setLender_Id(getLender_Id());
		teamLenderImpl.setTeam_Id(getTeam_Id());
		teamLenderImpl.setChanged_By(getChanged_By());
		teamLenderImpl.setChanged_Time(getChanged_Time());
		teamLenderImpl.setGroupId(getGroupId());
		teamLenderImpl.setCompanyId(getCompanyId());

		teamLenderImpl.resetOriginalValues();

		return teamLenderImpl;
	}

	public int compareTo(TeamLender teamLender) {
		int value = 0;

		if (getTeam_lender_Id() < teamLender.getTeam_lender_Id()) {
			value = -1;
		}
		else if (getTeam_lender_Id() > teamLender.getTeam_lender_Id()) {
			value = 1;
		}
		else {
			value = 0;
		}

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		TeamLender teamLender = null;

		try {
			teamLender = (TeamLender)obj;
		}
		catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = teamLender.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<TeamLender> toCacheModel() {
		TeamLenderCacheModel teamLenderCacheModel = new TeamLenderCacheModel();

		teamLenderCacheModel.team_lender_Id = getTeam_lender_Id();

		teamLenderCacheModel.lender_Id = getLender_Id();

		teamLenderCacheModel.team_Id = getTeam_Id();

		teamLenderCacheModel.changed_By = getChanged_By();

		String changed_By = teamLenderCacheModel.changed_By;

		if ((changed_By != null) && (changed_By.length() == 0)) {
			teamLenderCacheModel.changed_By = null;
		}

		teamLenderCacheModel.changed_Time = getChanged_Time();

		teamLenderCacheModel.groupId = getGroupId();

		teamLenderCacheModel.companyId = getCompanyId();

		return teamLenderCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{team_lender_Id=");
		sb.append(getTeam_lender_Id());
		sb.append(", lender_Id=");
		sb.append(getLender_Id());
		sb.append(", team_Id=");
		sb.append(getTeam_Id());
		sb.append(", changed_By=");
		sb.append(getChanged_By());
		sb.append(", changed_Time=");
		sb.append(getChanged_Time());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("org.goodreturn.model.TeamLender");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>team_lender_Id</column-name><column-value><![CDATA[");
		sb.append(getTeam_lender_Id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lender_Id</column-name><column-value><![CDATA[");
		sb.append(getLender_Id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>team_Id</column-name><column-value><![CDATA[");
		sb.append(getTeam_Id());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>changed_By</column-name><column-value><![CDATA[");
		sb.append(getChanged_By());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>changed_Time</column-name><column-value><![CDATA[");
		sb.append(getChanged_Time());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = TeamLender.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] {
			TeamLender.class
		};
	private long _team_lender_Id;
	private long _lender_Id;
	private long _team_Id;
	private String _changed_By;
	private long _changed_Time;
	private long _groupId;
	private long _companyId;
	private TeamLender _escapedModelProxy;
}