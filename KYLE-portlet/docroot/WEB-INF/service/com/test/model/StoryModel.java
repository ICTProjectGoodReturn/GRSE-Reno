/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.test.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the Story service. Represents a row in the &quot;KYLE_Story&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.test.model.impl.StoryModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.test.model.impl.StoryImpl}.
 * </p>
 *
 * @author gilaa004
 * @see Story
 * @see com.test.model.impl.StoryImpl
 * @see com.test.model.impl.StoryModelImpl
 * @generated
 */
public interface StoryModel extends BaseModel<Story> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a story model instance should use the {@link Story} interface instead.
	 */

	/**
	 * Returns the primary key of this story.
	 *
	 * @return the primary key of this story
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this story.
	 *
	 * @param primaryKey the primary key of this story
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the story_ ID of this story.
	 *
	 * @return the story_ ID of this story
	 */
	public long getStory_Id();

	/**
	 * Sets the story_ ID of this story.
	 *
	 * @param story_Id the story_ ID of this story
	 */
	public void setStory_Id(long story_Id);

	/**
	 * Returns the final_ story of this story.
	 *
	 * @return the final_ story of this story
	 */
	@AutoEscape
	public String getFinal_Story();

	/**
	 * Sets the final_ story of this story.
	 *
	 * @param final_Story the final_ story of this story
	 */
	public void setFinal_Story(String final_Story);

	/**
	 * Returns the is_ good_ enough_ for_ marketing of this story.
	 *
	 * @return the is_ good_ enough_ for_ marketing of this story
	 */
	public boolean getIs_Good_Enough_For_Marketing();

	/**
	 * Returns <code>true</code> if this story is is_ good_ enough_ for_ marketing.
	 *
	 * @return <code>true</code> if this story is is_ good_ enough_ for_ marketing; <code>false</code> otherwise
	 */
	public boolean isIs_Good_Enough_For_Marketing();

	/**
	 * Sets whether this story is is_ good_ enough_ for_ marketing.
	 *
	 * @param is_Good_Enough_For_Marketing the is_ good_ enough_ for_ marketing of this story
	 */
	public void setIs_Good_Enough_For_Marketing(
		boolean is_Good_Enough_For_Marketing);

	/**
	 * Returns the is_ good_ enough_ for_ final_ story of this story.
	 *
	 * @return the is_ good_ enough_ for_ final_ story of this story
	 */
	public boolean getIs_Good_Enough_For_Final_Story();

	/**
	 * Returns <code>true</code> if this story is is_ good_ enough_ for_ final_ story.
	 *
	 * @return <code>true</code> if this story is is_ good_ enough_ for_ final_ story; <code>false</code> otherwise
	 */
	public boolean isIs_Good_Enough_For_Final_Story();

	/**
	 * Sets whether this story is is_ good_ enough_ for_ final_ story.
	 *
	 * @param is_Good_Enough_For_Final_Story the is_ good_ enough_ for_ final_ story of this story
	 */
	public void setIs_Good_Enough_For_Final_Story(
		boolean is_Good_Enough_For_Final_Story);

	public boolean isNew();

	public void setNew(boolean n);

	public boolean isCachedModel();

	public void setCachedModel(boolean cachedModel);

	public boolean isEscapedModel();

	public Serializable getPrimaryKeyObj();

	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	public ExpandoBridge getExpandoBridge();

	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	public Object clone();

	public int compareTo(Story story);

	public int hashCode();

	public CacheModel<Story> toCacheModel();

	public Story toEscapedModel();

	public String toString();

	public String toXmlString();
}